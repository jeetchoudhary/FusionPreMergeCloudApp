2## Deploy approval Composites
    ant deploySOAComposite -Ddeploy.appinfo=AppInfo.xml -Ddeploy.configplan=deployPlan.xml -Ddeploy.composite=./deploy/sca_PrcPoApprovalComposite.jar
    ant deploySOAComposite -Ddeploy.appinfo=AppInfo.xml -Ddeploy.configplan=deployPlan.xml -Ddeploy.composite=$ADE_VIEW_ROOT/fusionapps/prc/deploy/jar_PrcPoApprovalSoaResource.jar
    ant deploySOAComposite -Ddeploy.appinfo=AppInfo.xml -Ddeploy.configplan=deployPlan.xml -Ddeploy.composite=$ADE_VIEW_ROOT/fusionapps/prc/deploy/jar_PrcPoSendFYINotificationSoaResource.jar
    cp po/noship/approvalRules/PoApproval_Rules_Metadata.jar ~/Desktop/
    connect('weblogic','weblogic1','t3://indl76040.in.oracle.com:7111')
    sca_importUpdates ('http://indl76040.in.oracle.com:7111','/home/jjikumar/Desktop/PoApproval_Rules_Metadata.jar', 'PrcPoApprovalComposite','11.13.0.0.0' )

3## Entries for flex enabling in adf-config.xml
    <mds:namespace path="/oracle/apps/prc/po/editDocument/flex/draftPurchaseOrderDistribution" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/editDocument/flex/draftPurchasingDocumentHeader" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/editDocument/flex/draftPurchasingDocumentLine" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/editDocument/flex/draftPurchasingDocumentSchedule" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/editDocument/flex/draftAgreementNotificationControl" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/viewDocument/publicFlex/draftPurchaseOrderDistribution" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/viewDocument/publicFlex/draftPurchasingDocumentHeader" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/viewDocument/publicFlex/draftPurchasingDocumentLine" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/viewDocument/publicFlex/draftPurchasingDocumentSchedule" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/viewDocument/publicFlex/purchaseOrderDistribution" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/viewDocument/publicFlex/purchasingDocumentHeader" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/viewDocument/publicFlex/purchasingDocumentLine" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/viewDocument/publicFlex/purchasingDocumentSchedule" metadata-store-usage="globalStore-by-adfconfigfilter"/>
    <mds:namespace path="/oracle/apps/prc/po/viewDocument/publicFlex/agreementNotificationControl" metadata-store-usage="globalStore-by-adfconfigfilter"/>

4## DB FPR Commands
    fpr -e jjikumar -s FUSIONAPPS_PT.V2MIBPRCX_LINUX.X64_LATEST -r jarupdate
    fpr -e jjikumar -s FUSIONAPPS_PT.V2MIBPRCX_LINUX.X64_LATEST -f F_JITU_PO_ONLY
    fpr -e slc10usm -s FUSIONAPPS_PT.V2MIBPRCX_LINUX.X64_LATEST -r jarupdate
    fpr -e slc10usm -s FUSIONAPPS_PT.V2MIBPRCX_LINUX.X64_LATEST -f F_JITU_PO_ONLY
    fpr -e slc09xht -s FUSIONAPPS_PT.V2MIBPRCX_LINUX.X64_LATEST -r jarupdate
    fpr -e slc09xht -s FUSIONAPPS_PT.V2MIBPRCX_LINUX.X64_LATEST -f F_JITU_PO_ONLY
    fpr -e in76040 -s FUSIONAPPS_PT.V2MIBPRCX_LINUX.X64_LATEST -r jarupdate
    fpr -e in76040 -s FUSIONAPPS_PT.V2MIBPRCX_LINUX.X64_LATEST -f F_JITU_PO_ONLY
    fpr -e sp5yd57 -s FUSIONAPPS_PT.V2MIBPRCX_LINUX.X64_LATEST -r jarupdate
    fpr -e sp5yd57 -s FUSIONAPPS_PT.V2MIBPRCX_LINUX.X64_LATEST -f F_JITU_PO_ONLY


5## Enable DB Logging 

	a.  set lines 150
        set pages 10000
        DECLARE
        test_flag  BOOLEAN;
        BEGIN
        test_flag := fnd_profile.save('AFLOG_PLSQL_FILENAME', 'APPLLOG_DIR/diagnostic.log','SITE','SITE');
        test_flag := fnd_profile.save('AFLOG_ENABLED', 'Y','SITE','SITE');
        test_flag := fnd_profile.save('AFLOG_LEVEL', 300,'SITE','SITE');
        test_flag := fnd_profile.save('AFLOG_MODULE','po.db.plsql.PO_AUTOCREATE_GROUPING_PVT.%','SITE','SITE');  //-- package level logging
        fnd_log_repository.init;
        END;
	b. If you get error "You cannot insert or update profile_option_value value other than 1000 for AFLOG_LEVEL" then 
		1. login to oradba
		2. sqlplus "/ as sysdba"
		3. ALTER TRIGGER SYS.PROFILEUPDATE disable;
		4. And execute the above command again.

	c. To get the path of the log file, execute the following command.
        select DIRECTORY_PATH from ALL_DIRECTORIES where DIRECTORY_NAME = 'APPLLOG_DIR';
        If directory name starts with /slot/ems13923   Then create the directory  as 
        CREATE OR REPLACE DIRECTORY APPLLOG_DIR AS '/scratch/oradba/db/tech_st/11.2.0/plsql_incident';
        Then bounce the DB
	d. after restart you can see the logs in the directory you gave
	e.  Before logging off disable logging by executing the following commands in the DB.
        set lines 150
        set pages 10000
        DECLARE
        test_flag  BOOLEAN;
        BEGIN
        test_flag := fnd_profile.save('AFLOG_ENABLED', 'N','SITE','SITE');
        test_flag := fnd_profile.save('AFLOG_LEVEL', 1000,'SITE','SITE');
        fnd_log_repository.init;
        END;

6## Take AWR Report
    a. ssh oradba@UT03DB
    b. sqlplus ./ as sysdba
    c. Configure Tables (Add other tables for which we want to take AWR Report) e.g
        EXEC DBMS_STATS.GATHER_TABLE_STATS (ownname => 'FUSION' , tabname => 'PO_HEADERS_ALL',cascade   => true);
        EXEC DBMS_STATS.GATHER_TABLE_STATS (ownname => 'FUSION' , tabname => 'PO_VERSIONS',cascade   => true);
        EXEC DBMS_STATS.GATHER_TABLE_STATS (ownname => 'FUSION' , tabname => 'PO_AGENT_ACCESSES',cascade   => true);
    d. Capture 
        ssh oradba@UT03DB
        cd Sqlrep_scripts/
        sqlplus sqlrep
        pass: SQLREP
        exec SQLREP.Start_Capture('JAN20NEW', 'FUSION');
        #run the flows that use fusion schema
        exec SQLREP.Stop_Capture('JAN20NEW');
        @sqlreprpt.sql JAN20NEW    CAPTURE_NAME -> THIS WILL GENERATE html awr report






